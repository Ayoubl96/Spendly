# Self-contained Portainer Stack - No external file dependencies
# All configurations embedded in the stack
version: '3.8'

services:
  # Nginx Reverse Proxy with embedded config
  nginx:
    image: nginx:1.24-alpine
    container_name: spendly-nginx
    ports:
      - "8080:80"
    volumes:
      - nginx_config:/etc/nginx/conf.d
      - /opt/spendly/data/uploads:/uploads:ro
      - /opt/spendly/data/nginx-logs:/var/log/nginx
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    networks:
      - spendly-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/health"] 
      interval: 30s
      timeout: 10s
      retries: 3
    command: |
      sh -c '
        # Create nginx configuration
        cat > /etc/nginx/conf.d/default.conf << "EOF"
        upstream frontend {
            server frontend:80;
        }
        upstream backend {
            server backend:8000;
        }
        server {
            listen 80;
            server_name spendly.ayoublefhim.com;
            
            # Health check endpoint
            location /health {
                access_log off;
                return 200 "healthy\n";
                add_header Content-Type text/plain;
            }
            
            # Frontend
            location / {
                proxy_pass http://frontend;
                proxy_set_header Host $$host;
                proxy_set_header X-Real-IP $$remote_addr;
                proxy_set_header X-Forwarded-For $$proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $$scheme;
                proxy_cache_bypass $$http_upgrade;
            }
            
            # API routes
            location /api/ {
                proxy_pass http://backend;
                proxy_set_header Host $$host;
                proxy_set_header X-Real-IP $$remote_addr;
                proxy_set_header X-Forwarded-For $$proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $$scheme;
                proxy_set_header X-Forwarded-Host $$host;
                proxy_cache_bypass $$http_upgrade;
                
                # CORS headers
                add_header Access-Control-Allow-Origin "https://spendly.ayoublefhim.com" always;
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
                add_header Access-Control-Allow-Headers "Origin, Content-Type, Accept, Authorization" always;
                add_header Access-Control-Allow-Credentials true always;
                
                # Handle preflight requests
                if ($$request_method = "OPTIONS") {
                    add_header Access-Control-Allow-Origin "https://spendly.ayoublefhim.com";
                    add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
                    add_header Access-Control-Allow-Headers "Origin, Content-Type, Accept, Authorization";
                    add_header Access-Control-Allow-Credentials true;
                    add_header Content-Length 0;
                    add_header Content-Type text/plain;
                    return 204;
                }
            }
            
            # Upload files
            location /uploads/ {
                proxy_pass http://backend;
                proxy_set_header Host $$host;
                proxy_set_header X-Real-IP $$remote_addr;
                proxy_set_header X-Forwarded-For $$proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $$scheme;
                client_max_body_size 50m;
            }
        }
        EOF
        
        # Start nginx
        nginx -g "daemon off;"
      '

  # Frontend Service
  frontend:
    build:
      context: https://github.com/Ayoubl96/Spendly.git#main:frontend
      dockerfile: Dockerfile.prod
      args:
        - REACT_APP_API_URL=/api/v1
        - REACT_APP_UPLOAD_URL=/uploads
    container_name: spendly-frontend
    restart: unless-stopped
    networks:
      - spendly-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend Service
  backend:
    build:
      context: https://github.com/Ayoubl96/Spendly.git#main:backend
      dockerfile: Dockerfile.prod
    container_name: spendly-backend
    environment:
      - ENVIRONMENT=production
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
      - FRONTEND_URL=https://spendly.ayoublefhim.com
      - BACKEND_URL=https://spendly.ayoublefhim.com
      - CORS_ORIGIN=https://spendly.ayoublefhim.com
      # Database Configuration
      - DB_HOST=database
      - DB_PORT=5432
      - DB_NAME=spendly_prod
      - DB_USER=spendly_user
      - DB_PASSWORD=88gv^rt8Lkv&&ffNrwy2iV
      - DB_URL=postgresql://spendly_user:88gv^rt8Lkv&&ffNrwy2iV@database:5432/spendly_prod
      # JWT Configuration
      - JWT_SECRET=f366ece0a833b680920ad9046e5d1ba1034ab7f3a0afe5c18ab7c844e539f341
      - JWT_EXPIRE=7d
      - JWT_ALGORITHM=HS256
      # Security
      - BCRYPT_ROUNDS=12
      - CORS_CREDENTIALS=true
      # File Upload
      - UPLOAD_PATH=/app/uploads
      - MAX_FILE_SIZE=52428800
      - ALLOWED_FILE_TYPES=image/jpeg,image/png,image/jpg,application/pdf,text/csv
      - UPLOAD_URL=https://spendly.ayoublefhim.com/uploads
      # Logging
      - LOG_LEVEL=info
      - LOG_FILE=/app/logs/app.log
    volumes:
      - /opt/spendly/data/uploads:/app/uploads
      - /opt/spendly/data/logs:/app/logs
    depends_on:
      database:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - spendly-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Database Service
  database:
    image: postgres:15-alpine
    container_name: spendly-database
    environment:
      - POSTGRES_DB=spendly_prod
      - POSTGRES_USER=spendly_user
      - POSTGRES_PASSWORD=88gv^rt8Lkv&&ffNrwy2iV
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - /opt/spendly/data/postgres:/var/lib/postgresql/data
      - /opt/spendly/data/backups:/backups
    restart: unless-stopped
    networks:
      - spendly-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U spendly_user -d spendly_prod"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # Database Backup Service
  backup:
    image: postgres:15-alpine
    container_name: spendly-backup
    environment:
      - PGHOST=database
      - PGDATABASE=spendly_prod
      - PGUSER=spendly_user
      - PGPASSWORD=88gv^rt8Lkv&&ffNrwy2iV
    volumes:
      - /opt/spendly/data/backups:/backups
      - /opt/spendly/data/uploads:/uploads:ro
    depends_on:
      - database
    restart: unless-stopped
    networks:
      - spendly-network
    command: |
      sh -c '
        echo "0 2 * * * pg_dump > /backups/spendly_backup_$$(date +%Y%m%d_%H%M%S).sql && find /backups -name \"*.sql\" -mtime +30 -delete" | crontab -
        crond -f
      '

networks:
  spendly-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16

volumes:
  nginx_config:
