# Spendly Production Stack - Fixed YAML Syntax
version: '3.8'

services:
  # Database first - most stable
  database:
    image: postgres:15-alpine
    container_name: spendly-database
    environment:
      - POSTGRES_DB=spendly_prod
      - POSTGRES_USER=spendly_user
      - POSTGRES_PASSWORD=88gv^rt8Lkv&&ffNrwy2iV
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - /opt/spendly/data/postgres:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U spendly_user -d spendly_prod"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # Frontend Service
  frontend:
    build:
      context: https://github.com/Ayoubl96/Spendly.git#main:frontend
      dockerfile: Dockerfile.prod
      args:
        - REACT_APP_API_URL=/api/v1
        - REACT_APP_UPLOAD_URL=/uploads
    container_name: spendly-frontend
    restart: unless-stopped


  # Backend Service  
  backend:
    build:
      context: https://github.com/Ayoubl96/Spendly.git#main:backend
      dockerfile: Dockerfile.prod
    container_name: spendly-backend
    environment:
      - ENVIRONMENT=production
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
      - FRONTEND_URL=https://spendly.ayoublefhim.com
      - BACKEND_URL=https://spendly.ayoublefhim.com
      - CORS_ORIGIN=https://spendly.ayoublefhim.com
      - DB_HOST=spendly-database
      - DB_PORT=5432
      - DB_NAME=spendly_prod
      - DB_USER=spendly_user
      - DB_PASSWORD=88gv^rt8Lkv&&ffNrwy2iV
      - DB_URL=postgresql://spendly_user:88gv^rt8Lkv&&ffNrwy2iV@spendly-database:5432/spendly_prod
      - JWT_SECRET=f366ece0a833b680920ad9046e5d1ba1034ab7f3a0afe5c18ab7c844e539f341
      - JWT_EXPIRE=7d
      - JWT_ALGORITHM=HS256
      - BCRYPT_ROUNDS=12
      - CORS_CREDENTIALS=true
    volumes:
      - /opt/spendly/data/uploads:/app/uploads
      - /opt/spendly/data/logs:/app/logs
    depends_on:
      database:
        condition: service_healthy
    restart: unless-stopped


  # Nginx - Reverse Proxy (starts independently)
  nginx:
    image: nginx:1.24-alpine
    container_name: spendly-nginx
    ports:
      - "8080:80"
    restart: unless-stopped
    volumes:
      - /opt/spendly/data/nginx-logs:/var/log/nginx
    command: >
      sh -c '
        echo "Creating nginx configuration..." &&
        rm -f /etc/nginx/conf.d/default.conf &&
        cat > /etc/nginx/conf.d/default.conf << EOF
      upstream frontend {
          server spendly-frontend:80 max_fails=3 fail_timeout=30s;
      }
      
      upstream backend {
          server spendly-backend:8000 max_fails=3 fail_timeout=30s;
      }
      
      server {
          listen 80;
          server_name _;
          client_max_body_size 50m;
          
          location /health {
              return 200 "nginx healthy - ready for traffic\\n";
              add_header Content-Type text/plain;
          }
          
          location /api/ {
              proxy_pass http://backend;
              proxy_set_header Host \$host;
              proxy_set_header X-Real-IP \$remote_addr;
              proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
              proxy_set_header X-Forwarded-Proto \$scheme;
              proxy_connect_timeout 5s;
              proxy_send_timeout 60s;
              proxy_read_timeout 60s;
              proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
          }
          
          location /uploads/ {
              proxy_pass http://backend;
              proxy_set_header Host \$host;
              proxy_set_header X-Real-IP \$remote_addr;
              proxy_connect_timeout 5s;
              proxy_send_timeout 60s;
              proxy_read_timeout 60s;
          }
          
          location / {
              proxy_pass http://frontend;
              proxy_set_header Host \$host;
              proxy_set_header X-Real-IP \$remote_addr;
              proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
              proxy_set_header X-Forwarded-Proto \$scheme;
              proxy_connect_timeout 5s;
              proxy_send_timeout 60s;
              proxy_read_timeout 60s;
              proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
          }
      }
      EOF
        echo "Testing nginx configuration..." &&
        nginx -t &&
        echo "Nginx configuration is valid. Starting nginx..." &&
        exec nginx -g "daemon off;"
      '
