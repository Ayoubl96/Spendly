version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: spendly_user
      POSTGRES_PASSWORD: spendly_pass
      POSTGRES_DB: spendly_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U spendly_user -d spendly_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - spendly-network

  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - spendly-network

  redis-insight:
    image: redis/redisinsight:latest
    restart: unless-stopped
    ports:
      - "5540:5540"
    volumes:
      - redis_insight_data:/data
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - spendly-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: postgresql://spendly_user:spendly_pass@postgres:5432/spendly_db
      REDIS_URL: redis://redis:6379
      SECRET_KEY: ${SECRET_KEY:-your-secret-key-here-change-in-production}
      ENVIRONMENT: development
    volumes:
      - ./backend:/app
      - backend_uploads:/app/uploads
    ports:
      - "8001:8001"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: uvicorn app.main:app --host 0.0.0.0 --port 8001 --reload
    networks:
      - spendly-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      REACT_APP_API_URL: http://localhost:8001/api/v1
      PORT: 3001
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3001:3001"
    depends_on:
      - backend
    command: npm start
    networks:
      - spendly-network

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "8080:80"
    depends_on:
      - backend
      - frontend
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - spendly-network

  nginx-proxy-manager:
    image: 'jc21/nginx-proxy-manager:latest'
    restart: unless-stopped
    ports:
      - '8090:80'      # HTTP
      - '8443:443'     # HTTPS
      - '8181:81'      # Admin Web Interface
    environment:
      DB_MYSQL_HOST: "nginx-db"
      DB_MYSQL_PORT: 3306
      DB_MYSQL_USER: "npm"
      DB_MYSQL_PASSWORD: "npm"
      DB_MYSQL_NAME: "npm"
    volumes:
      - npm_data:/data
      - npm_letsencrypt:/etc/letsencrypt
    depends_on:
      - nginx-db
    networks:
      - spendly-network

  nginx-db:
    image: 'mariadb:latest'
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: 'npm'
      MYSQL_DATABASE: 'npm'
      MYSQL_USER: 'npm'
      MYSQL_PASSWORD: 'npm'
    volumes:
      - nginx_db:/var/lib/mysql
    networks:
      - spendly-network

networks:
  spendly-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  redis_insight_data:
  backend_uploads:
  npm_data:
  npm_letsencrypt:
  nginx_db: