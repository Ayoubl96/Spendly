# Development Docker Compose Configuration
version: '3.8'

services:
  # Frontend Development Server
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: spendly-frontend-dev
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - REACT_APP_API_URL=http://localhost:8000/api/v1
      - REACT_APP_UPLOAD_URL=http://localhost:8000/uploads
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - backend
    networks:
      - spendly-dev
    stdin_open: true
    tty: true

  # Backend Development Server
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: spendly-backend-dev
    ports:
      - "8000:8000"
      - "5678:5678" # Debug port
    volumes:
      - ./backend:/app
      - ./data/uploads:/app/uploads
      - ./data/logs:/app/logs
    environment:
      - ENVIRONMENT=development
      - LOG_LEVEL=debug
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
    env_file:
      - .env
    depends_on:
      - database
      - redis
    networks:
      - spendly-dev
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  # PostgreSQL Database
  database:
    image: postgres:15-alpine
    container_name: spendly-database-dev
    environment:
      - POSTGRES_DB=spendly_dev
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    networks:
      - spendly-dev
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d spendly_dev"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: spendly-redis-dev
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    networks:
      - spendly-dev
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Mailhog for email testing
  mailhog:
    image: mailhog/mailhog:latest
    container_name: spendly-mailhog-dev
    ports:
      - "1025:1025" # SMTP port
      - "8025:8025" # Web UI port
    networks:
      - spendly-dev

  # Database admin interface (optional)
  adminer:
    image: adminer:4.8.1
    container_name: spendly-adminer-dev
    ports:
      - "8080:8080"
    networks:
      - spendly-dev
    environment:
      - ADMINER_DEFAULT_SERVER=database

networks:
  spendly-dev:
    driver: bridge

volumes:
  postgres_dev_data:
  redis_dev_data: