# Spendly Production Stack - Fixed Port Exposure
version: '3.8'

services:
  # Nginx Reverse Proxy - Simple and reliable
  nginx:
    image: nginx:1.24-alpine
    container_name: spendly-nginx
    ports:
      - "8080:80"
    restart: unless-stopped
    networks:
      - spendly-network
    depends_on:
      - frontend
      - backend
    volumes:
      - /opt/spendly/data/nginx-logs:/var/log/nginx
    command: |
      sh -c '
        cat > /etc/nginx/conf.d/default.conf << "EOF"
        server {
            listen 80;
            location / {
                proxy_pass http://frontend:80;
                proxy_set_header Host \$$host;
                proxy_set_header X-Real-IP \$$remote_addr;
            }
            location /api/ {
                proxy_pass http://backend:8000;
                proxy_set_header Host \$$host;
                proxy_set_header X-Real-IP \$$remote_addr;
            }
            location /health {
                return 200 "OK";
                add_header Content-Type text/plain;
            }
        }
        EOF
        nginx -g "daemon off;"
      '

  # Frontend Service
  frontend:
    build:
      context: https://github.com/Ayoubl96/Spendly.git#main:frontend
      dockerfile: Dockerfile.prod
      args:
        - REACT_APP_API_URL=/api/v1
        - REACT_APP_UPLOAD_URL=/uploads
    container_name: spendly-frontend
    restart: unless-stopped
    networks:
      - spendly-network

  # Backend Service
  backend:
    build:
      context: https://github.com/Ayoubl96/Spendly.git#main:backend
      dockerfile: Dockerfile.prod
    container_name: spendly-backend
    env_file:
      - env.production
    volumes:
      - /opt/spendly/data/uploads:/app/uploads
      - /opt/spendly/data/logs:/app/logs
    depends_on:
      database:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - spendly-network

  # Database Service
  database:
    image: postgres:15-alpine
    container_name: spendly-database
    environment:
      - POSTGRES_DB=${DB_NAME:-spendly_prod}
      - POSTGRES_USER=${DB_USER:-spendly_user}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-88gv^rt8Lkv&&ffNrwy2iV}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - /opt/spendly/data/postgres:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - spendly-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-spendly_user} -d ${DB_NAME:-spendly_prod}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # Database Backup Service
  backup:
    image: postgres:15-alpine
    container_name: spendly-backup
    environment:
      - PGHOST=database
      - PGDATABASE=${DB_NAME:-spendly_prod}
      - PGUSER=${DB_USER:-spendly_user}
      - PGPASSWORD=${DB_PASSWORD:-88gv^rt8Lkv&&ffNrwy2iV}
    volumes:
      - /opt/spendly/data/backups:/backups
    depends_on:
      - database
    restart: unless-stopped
    networks:
      - spendly-network
    command: |
      sh -c '
        echo "0 2 * * * pg_dump > /backups/spendly_backup_$$(date +%Y%m%d_%H%M%S).sql" | crontab -
        crond -f
      '

networks:
  spendly-network:
    driver: bridge
